{"metadataId":1285,"table":{"tableName":"user","directory":"database/dbPermission/user","addRoutes":true,"allowCodeGeneration":true},"fields":{"email":{"dataType":"string","unique":true,"published":true,"defaultElements":{"email":{"parentField":"email","labelText":"Email","elementType":"input","attributes":{"type":"text"},"validation":{"default":{},"post":{"passIfString":"","passIfNotEmpty":"","passIfHasAmpersand":"// Behavior from data dictionary at uet9z3uuzgy5hmytmsxf \n  if(email.indexOf(\"@\") === -1){return callback(400, {'Error' : 'Not a valid email'});}"},"put":{"stringTypeTrimAmpersand":"// Behavior from data dictionary at og5gtmcsk6od74wkr9vj \n  // If email is of string type and is not empty \n  if (typeof(email) === 'string' && email.trim().length > 0) \n  { \n    // The user entered something in the edit form so check for an ampersand. \n    if(email.indexOf('@') != -1) \n    { \n      // pass if ampersand \n      email = email.trim() \n    } \n    else // No ampersand so reject the edit. \n    { \n      return callback(400, {'Error' : 'Not a valid email'}); \n    } \n  } \n  // Else, the user may have entered some other datatype like a number or \n  // perhaps nothing at all if using the Delete form or the Password form. \n  else \n  { \n    // If the user entered nothing: \n    if(email === undefined) \n    { \n      // Then user is trying to delete a record or change the password \n      email = false \n    } \n    else // The user entered something invalid so reject the edit. \n    { \n      return callback(400, {'Error' : 'Not a valid email'}); \n    } \n  }"},"get":{}}}}},"hashedPassword":{"dataType":"string","unique":false,"published":false,"defaultElements":{"password":{"parentField":"hashedPassword","labelText":"Choose a Password","elementType":"input","attributes":{"type":"password","placeholder":"Use random characters."},"validation":{"default":{},"post":{"passIfString":"","passIfNotEmpty":"// Behavior from data dictionary at bet9z4ufzg97hmfdhmxt \n  if(!password){return callback(400, {'Error' : 'No password was entered'});}","passIfHasNumber":"// Behavior from data dictionary at 5et9z9uuzgy5hmfdmmxf \n  // declare a function used to check if the password has a number in it. \n  function passwordDoesNotHaveNumber (password) \n  { \n    let str = String(password); \n\n    for( let i = 0; i < str.length; i++) \n    { \n      if(!isNaN(str.charAt(i))) \n      { \n        return false; \n        break; \n      } \n    } \n    return true; \n  }; \n\n  if(passwordDoesNotHaveNumber(password)){return callback(400, {'Error' : 'password must contain a number.'});}; "},"put":{"passwordValidation":"// Behavior from data dictionary at e09hmheqvsxzbi50n4ny \n  // If password is of string type and is not empty \n  if (typeof(password) === 'string' && password.trim().length > 0) \n  { \n    // The user entered something in the password form so check that the \n    // user put a number in the password to make it more secure. \n    // Start out assuming that there is no number in the password. \n\n    // declare a function used to check if the password has a number in it. \n    function passwordHasNumber (password) \n    { \n      let str = String(password); \n\n      for( let i = 0; i < str.length; i++) \n      { \n        if(!isNaN(str.charAt(i))) \n        { \n          return true; \n          break; \n        } \n      } \n\n      return false; \n    }; \n\n    if(passwordHasNumber(password)) \n    { \n      // If we are here then the user inserted a number in the password. \n      // There is no need to do anything but let it pass through as is. \n      // Notice we are not trimming the password. \n      // If the user wants white space in the password, that's ok. \n    } \n    else // No number in the password so reject the edit. \n    { \n      return callback(400, {'Error' : 'password must contain a number.'}); \n    } \n  } \n  // Else, the user may have entered some other datatype like an array or \n  // perhaps nothing at all if using the Delete form or the Edit form. \n  else \n  { \n    // If the user entered nothing: \n    if(password === undefined) \n    { \n      // Then user is using the Delete form or the Edit form. \n      password = false \n    } \n    else // The user entered something invalid so reject the edit. \n    { \n      return callback(400, {'Error' : 'Not a valid password'}); \n    } \n  }"},"get":{}}}},"calculation":{"putHandlerPreprocessing":"      // Password calculation from data dictionary at jet9znuuzg95hmfdmmx5 is processed here.\n          // Hash the password\n          let hashedPassword = helpers.hash(password);\n\n          // If the password was not hashed successfully then exit this process without appending the record.\n          if(!hashedPassword)\n          {\n            helpers.log\n            (\n              5,\n              'jet9znuuzg95hmfdmmx5' + '\\n' +\n              'Could not hash the password' + '\\n'\n            ); // End of: helpers.log(...)\n\n            return callback(500, {'Error' : 'Could not hash the password'});\n          } // End of: else the password was not hashed successfully.\n","postHandlerPreprocessing":"// Password calculation from data dictionary at het9z9uuzgy5hmfwdgkz is processed here.\n    // Hash the password\n    let hashedPassword = helpers.hash(password);\n\n    // If the password was not hashed successfully then exit this process without appending the record.\n    if(!hashedPassword)\n    {\n      helpers.log\n      (\n        5,\n        'het9z9uuzgy5hmfwdgkz' + '\\n' +\n        'Could not hash the password' + '\\n'\n      ); // End of: helpers.log(...)\n\n      return callback(500, {'Error' : 'Could not hash the password'});\n    } // End of: else the password was not hashed successfully.\n\n"}}},"apiHandlers":{"get":{},"post":{},"put":{}},"pageHandlers":{"list":{},"add":{},"edit":{}},"webPages":{"addPage":{"heading":"Create A New Account","forms":{"addForm":{"heading":"Use a password with completly random characters","submitButtonText":"Create User","formElements":{"email":{"labelText":"Email Address","attributes":{"placeholder":"alice@gmail.com"}},"password":{"attributes":{"placeholder":"Use random symbols"}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, USERS","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"User's Settings","forms":{"editForm":{"heading":"Edit User's Account Settings","successMessage":"Your Changes Have Been Saved","submitButtonText":"Save Changes","formElements":{"email":{}}},"passwordForm":{"heading":"Change Password","successMessage":"New Password Has Been Saved","submitButtonText":"Change Password","formElements":{"password":{"attributes":{"placeholder":"Make it a good one"}}}},"deleteForm":{"heading":"Delete User","submitButtonText":"Delete User"}}}},"timeStamp":1575591056641,"deleted":false}
{"metadataId":950,"table":{"tableName":"oPhoneType","directory":"ourSelf/oLookup/oPhoneType","addRoutes":true,"allowCodeGeneration":true},"fields":{"phoneType":{"dataType":"string","unique":true,"published":true,"defaultElements":{"phoneType":{"parentField":"phoneType","labelText":"Phone Type","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}}}},"webPages":{"addPage":{"heading":"Create A New Phone Type","forms":{"addForm":{"heading":"Use this form to add a new phone type","formElements":{"phoneType":{"labelText":"Phone Type","attributes":{"placeholder":"Mobile Phone"}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, PHONE TYPES","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"Phone Types","forms":{"editForm":{"heading":"Edit Phone Types","formElements":{"phoneType":{}}},"deleteForm":{"heading":"Delete Phone Type"}}}},"timeStamp":1575591056641,"deleted":false}
{"metadataId":1000,"table":{"tableName":"metadata","favoriteFlavors":{"icecream":"rum raisin","pie":"pumpkin","soup":"vegetable","fish":"sardines"},"directory":"database/dbMetadata","addRoutes":true,"allowCodeGeneration":true},"fields":{"table":{"dataType":"object","published":true,"properties":{"tableName":{"dataType":"string","unique":true,"published":true,"defaultElements":{"tableName":{"parentField":"tableName","labelText":"Table Name","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"favoriteFlavors":{"dataType":"object","published":true,"properties":{"icecream":{"dataType":"string","unique":false,"published":true,"defaultElements":{"icecream":{"parentField":"favoriteFlavors","labelText":"Favorite Icecream","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"pie":{"dataType":"string","unique":false,"published":false,"defaultElements":{"pie":{"parentField":"favoriteFlavors","labelText":"Favorite Pie","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"soup":{"dataType":"string","unique":false,"published":true,"defaultElements":{"soup":{"parentField":"favoriteFlavors","labelText":"Favorite Soup","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"fish":{"dataType":"string","unique":false,"published":true,"defaultElements":{"fish":{"parentField":"favoriteFlavors","labelText":"Favorite Fish","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}}}},"directory":{"dataType":"string","unique":true,"published":true,"defaultElements":{"directory":{"parentField":"directory","labelText":"Directory","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"addRoutes":{"dataType":"string","unique":false,"published":true,"defaultElements":{"addRoutes":{"parentField":"addRoutes","labelText":"Add Routes","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"allowCodeGeneration":{"dataType":"string","unique":false,"published":true,"defaultElements":{"allowCodeGeneration":{"parentField":"allowCodeGeneration","labelText":"Allow Code Generation","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}}}}},"apiHandlers":{"get":{},"post":{},"put":{}},"pageHandlers":{"list":{},"add":{},"edit":{}},"webPages":{"addPage":{"heading":"Create a New Table","forms":{"addForm":{"heading":"Enter instructions for creating a new table in the system","submitButtonText":"Create Table","formElements":{"table":{"labelText":"Table Information","properties":{"tableName":{"labelText":"Table Name","attributes":{"placeholder":"Enter a Table Name"}},"favoriteFlavors":{"labelText":"Favorite Flavor Information","properties":{"icecream":{"labelText":"Icecream","attributes":{"placeholder":"myFavoriteIcecreamFlavor"}},"pie":{"labelText":"Pie","attributes":{"placeholder":"myFavoriteKindOfPie"}},"soup":{"labelText":"Soup","attributes":{"placeholder":"myFavoriteKindOfSoup"}},"fish":{"labelText":"Fish","attributes":{"placeholder":"myFavoriteKindOfFish"}}}},"directory":{"labelText":"Directory","attributes":{"placeholder":"myDirectory/mySubdirectory"}},"addRoutes":{"labelText":"Add Routes and Dependencies","attributes":{"placeholder":"true"}},"allowCodeGeneration":{"labelText":"Allow Code Generation","attributes":{"placeholder":"true"}}}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, TABLES","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"Edit Instructions for Building Code","forms":{"editForm":{"heading":"Edit User's Account Settings","successMessage":"Your Changes Have Been Saved","submitButtonText":"Save Changes","formElements":{"table":{"tableName":{"labelText":"Table Name","attributes":{"placeholder":"Enter a Table Name"}},"directory":{"labelText":"Directory","attributes":{"placeholder":"myDirectory/mySubdirectory"}},"addRoutes":{"labelText":"Add Routes and Dependencies","attributes":{"placeholder":"true"}}}}},"deleteForm":{"heading":"Delete User","submitButtonText":"Delete User"}}}},"timeStamp":1575591056641,"deleted":false}
{"metadataId":1050,"table":{"tableName":"oContactType","directory":"ourSelf/oLookup/oContactType","addRoutes":true,"allowCodeGeneration":true},"fields":{"contactType":{"dataType":"string","unique":true,"published":true,"defaultElements":{"contactType":{"parentField":"contactType","labelText":"Contact Type","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}}}},"webPages":{"addPage":{"heading":"Create A New Contact Type","submitButtonText":"Create New","forms":{"addForm":{"heading":"Use this form to add a new contact type","formElements":{"contactType":{"labelText":"Contact Type","attributes":{"placeholder":"Employee"}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, CONTACT TYPES","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"Contact Types","forms":{"editForm":{"heading":"Edit ContactTypes","submitButtonText":"Save Changes","formElements":{"contactType":{}}},"deleteForm":{"heading":"Delete Contact Type"}}}},"timeStamp":1575591056641,"deleted":false}
{"metadataId":1055,"table":{"tableName":"oAddressType","directory":"ourSelf/oLookup/oAddressType","addRoutes":true,"allowCodeGeneration":true},"fields":{"addressType":{"dataType":"string","unique":true,"published":true,"defaultElements":{"addressType":{"parentField":"addressType","labelText":"Address Type","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}}}},"webPages":{"addPage":{"heading":"Create A New Address Type","forms":{"addForm":{"heading":"Use this form to add a new address type","formElements":{"addressType":{"labelText":"Address Type","attributes":{"placeholder":"Mobile Address"}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, ADDRESS TYPES","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"Address Types","forms":{"editForm":{"heading":"Edit Address Types","formElements":{"addressType":{}}},"deleteForm":{"heading":"Delete Address Type"}}}},"timeStamp":1575591056641,"deleted":false}
{"metadataId":1060,"table":{"tableName":"oContact","directory":"ourSelf/oContact","addRoutes":true,"allowCodeGeneration":true},"fields":{"oContact":{"dataType":"object","published":true,"properties":{"firstName":{"dataType":"string","unique":true,"published":true,"defaultElements":{"firstName":{"parentField":"firstName","labelText":"First Name","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"lastName":{"dataType":"string","unique":true,"published":true,"defaultElements":{"lastName":{"parentField":"lastName","labelText":"Last Name","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"fullName":{"dataType":"string","unique":true,"published":false,"defaultElements":{"fullName":{"parentField":"fullName","labelText":"fullName","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"email":{"dataType":"string","unique":false,"published":true,"defaultElements":{"email":{"parentField":"email","labelText":"Email","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"phone":{"dataType":"object","published":true,"properties":{"phone1":{"dataType":"object","published":true,"properties":{"phoneType":{"dataType":"string","unique":false,"published":true,"defaultElements":{"phoneType":{"parentField":"phoneType","labelText":"Phone Type","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"phone":{"dataType":"string","unique":false,"published":true,"defaultElements":{"phone":{"parentField":"phone","labelText":"Phone Number","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}}}}}},"address":{"dataType":"object","published":true,"properties":{"address1":{"dataType":"object","published":true,"properties":{"addressType":{"dataType":"string","unique":false,"published":true,"defaultElements":{"addressType":{"parentField":"addressType","labelText":"Address Type","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"street1":{"dataType":"string","unique":false,"published":true,"defaultElements":{"street1":{"parentField":"street1","labelText":"Street Address 1","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"street2":{"dataType":"string","unique":false,"published":true,"defaultElements":{"street2":{"parentField":"street2","labelText":"Street Address 2","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"city":{"dataType":"string","unique":false,"published":true,"defaultElements":{"city":{"parentField":"city","labelText":"City","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"state":{"dataType":"string","unique":false,"published":true,"defaultElements":{"state":{"parentField":"state","labelText":"State","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}},"zip":{"dataType":"string","unique":false,"published":true,"defaultElements":{"zip":{"parentField":"zip","labelText":"Zip Code","elementType":"input","attributes":{"type":"text"},"validation":{"default":{"passIfString&NotEmptyThenTrim":""},"post":{},"put":{},"get":{}}}},"calculation":{"putHandlerPreprocessing":"","postHandlerPreprocessing":""}}}}}}}}},"apiHandlers":{"get":{},"post":{},"put":{}},"pageHandlers":{"list":{},"add":{},"edit":{}},"webPages":{"addPage":{"heading":"Create a New Table","forms":{"addForm":{"heading":"Enter instructions for creating a new table in the system","submitButtonText":"Create Table","formElements":{"oContact":{"labelText":"Contact Information","properties":{"firstName":{"labelText":"First Name","attributes":{"placeholder":"Enter a First Name"}},"lastName":{"labelText":"Last Name","attributes":{"placeholder":"Enter a Last Name"}},"email":{"labelText":"Email","attributes":{"placeholder":"alice@gmail.com"}},"phone":{"labelText":"Phone Information","properties":{"phone1":{"labelText":"Phone1","properties":{"phoneType":{"labelText":"Phone Type","attributes":{"placeholder":"Mobile Phone"}},"phone":{"labelText":"Phone","attributes":{"placeholder":123456789}}}}}},"address":{"labelText":"Favorite Flavor Information","properties":{"address1":{"labelText":"address1","properties":{"addressType":{"labelText":"Address Type","attributes":{"placeholder":"Home Address"}},"street1":{"labelText":"Street 1","attributes":{"placeholder":"123 Main St."}},"street2":{"labelText":"Street 2","attributes":{"placeholder":"2nd Floor Apartment"}},"city":{"labelText":"City","attributes":{"placeholder":"My Hometown"}},"state":{"labelText":"State","attributes":{"placeholder":"My Great State"}},"zip":{"labelText":"Zip Code","attributes":{"placeholder":99999}}}}}}}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, TABLES","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"Edit Instructions for Building Code","forms":{"editForm":{"heading":"Edit User's Account Settings","successMessage":"Your Changes Have Been Saved","submitButtonText":"Save Changes","formElements":{"table":{"tableName":{"labelText":"Table Name","attributes":{"placeholder":"Enter a Table Name"}},"directory":{"labelText":"Directory","attributes":{"placeholder":"myDirectory/mySubdirectory"}},"addRoutes":{"labelText":"Add Routes and Dependencies","attributes":{"placeholder":"true"}}}}},"deleteForm":{"heading":"Delete User","submitButtonText":"Delete User"}}}},"timeStamp":1575591056641,"deleted":false}
