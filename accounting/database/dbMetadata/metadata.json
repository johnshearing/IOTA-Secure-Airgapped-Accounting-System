{"tableId":1285,"table":{"tableName":"user","directory":"database/dbPermission/user"},"fields":{"email":{"dataType":"string","unique":true,"published":true,"defaultElements":{"email":{"parentField":"email","labelText":"Email","elementType":"input","attributes":{"type":"text"},"validation":{"default":{},"post":{"passIfString":"","passIfNotEmpty":"","passIfHasAmpersand":"// uet9z3uuzgy5hmytmsxf \n  if(email.indexOf(\"@\") === -1){return callback(400, {'Error' : 'Not a valid email'});}"},"put":{},"get":{}}}}},"hashedPassword":{"dataType":"string","unique":false,"published":false,"defaultElements":{"password":{"parentField":"hashedPassword","labelText":"Choose a Password","elementType":"input","attributes":{"type":"password","placeholder":"Use random characters."},"validation":{"default":{},"post":{"passIfString":"","passIfNotEmpty":"// bet9z4ufzg97hmfdhmxt \n  if(!password){return callback(400, {'Error' : 'No password was entered'});}","passIfHasNumber":"// 5et9z9uuzgy5hmfdmmxf \n  // declare a function used to check if the password has a number in it. \n  function passwordDoesNotHaveNumber (password) \n  { \n    let str = String(password); \n\n    for( let i = 0; i < str.length; i++) \n    { \n      if(!isNaN(str.charAt(i))) \n      { \n        return false; \n        break; \n      } \n    } \n    return true; \n  }; \n\n  if(passwordDoesNotHaveNumber(password)){return callback(400, {'Error' : 'password must contain a number.'});}; "},"put":{},"get":{}}}},"calculation":{"hashThePassword":"// Password calculation is processed here.\n    // het9z9uuzgy5hmfwdgkz\n    // Hash the password\n    var hashedPassword = helpers.hash(password);\n\n    // If the password was not hashed successfully then exit this process without appending the record.\n    if(!hashedPassword)\n    {\n      helpers.log\n      (\n        5,\n        'zet9z4uuzg95hmfdmmx5' + '\\n' +\n        'Could not hash the password' + '\\n'\n      ); // End of: helpers.log(...)\n\n      return callback(500, {'Error' : 'Could not hash the password'});\n    } // End of: else the password was not hashed successfully.\n\n"}}},"apiHandlers":{"get":{},"post":{},"put":{}},"pageHandlers":{"list":{},"add":{},"edit":{}},"webPages":{"addPage":{"heading":"Create A New Account","forms":{"addForm":{"heading":"Use a password with completly random characters","submitButtonText":"Create User","formElements":{"email":{"labelText":"Email Address","attributes":{"placeholder":"alice@gmail.com"}},"password":{"attributes":{"placeholder":"Use random symbols"}}}}}},"listPage":{"heading":"SELECT, FILTER, AND SORT, USERS","forms":{"listForm":{"heading":"\n  All records are returned in order of creation if no selections are made</br>\n  Press the submit button to see the results\n"}}},"editPage":{"heading":"User's Settings","forms":{"editForm":{"heading":"Edit User's Account Settings","successMessage":"Your Changes Have Been Saved","submitButtonText":"Save Changes","formElements":{"email":{}}},"passwordForm":{"heading":"Change Password","successMessage":"New Password Has Been Saved","submitButtonText":"Change Password","formElements":{"password":{"attributes":{"placeholder":"Make it a good one"}}}},"deleteForm":{"heading":"Delete User","submitButtonText":"Delete User"}}}},"timeStamp":1575591056641,"deleted":false}