{
    "$id": "https://privatekeyvault/meta.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "meta.json schema",
    "description": "Schema for meta.json",
    "type": "object",
    "properties": {
        "tableId": {
            "description": "The unique identifier for this entry in the meta.json table. Value comes from lib.nextId()",
            "type": "integer"
        },
        "table": {
            "description": "Contains basic information about the table we are generating code to handle",
            "type": "object",
            "properties": {
                "tableName": {
                    "description": "Name of the table for which we are generating code to handle.",
                    "type": "string",
                    "default": "singlarCamelCase"
                },
                "directory": {
                    "description": "Path of folder where the table for which we are generating code will reside.",
                    "type": "string",
                    "default": "noForwardSlashAtBeginingOrEnd"
                },
                "addRoutes": {
                    "description": "Signals if routes and dependencies should be added to server.js for the code we are generating on behalf of the table defined above.",
                    "type": "boolean",
                    "default": true
                }
            },
            "required": [
                "tableName",
                "directory",
                "addRoutes"
            ]
        },
        "fields": {
            "description": "metadata describes how to generate code to handle fields in the table for which we are generating code.",
            "type": "object",
            "properties": {
                "newField": {
                    "description": "Name of a field in the table for which we are generating code.",
                    "type": "object",
                    "properties": {
                        "dataType": {
                            "description": "Defines the dataType of newField",
                            "type": "string",
                            "default": "string"
                        },
                        "unique": {
                            "description": "Defines if values entered into newField must be unique. Make true for foreign key fields",
                            "type": "boolean",
                            "default": "false"
                        },
                        "defaultElements": {
                            "description": "Specifies form elements used to populate newField with data for the record in the table for which we are generating code.",
                            "type": "object",
                            "default": {
                                "placeHolderForNow": "More stuff goes in this object"
                            }
                        }
                    },
                    "required": [
                        "dataType",
                        "unique",
                        "defaultElements"
                    ]
                }
            },
            "required": [
                "newField"
            ]
        },
        "apiHandlers": {
            "description": "metadata describes how to generate code for apiHandlers if there are any special considerations.",
            "type": "object"
        },
        "pageHandlers": {
            "description": "metadata describes how to generate code for pageHandlers if there are any special considerations.",
            "type": "object"
        },
        "webPages": {
            "description": "metadata describes how to generate webpages and supporting code for interacting with the table for which we are generating code",
            "type": "object"
        },
        "timeStamp": {
            "description": "This field tells when a record in metadata.json has been created. Value should be provided by Date.now()",
            "type": "integer"
        },
        "deleted": {
            "description": "This field tells if a record in metadata.json has been deleted.",
            "type": "boolean"
        }
    },
    "required": [
        "tableId",
        "table",
        "fields",
        "apiHandlers",
        "pageHandlers",
        "webPages",
        "timeStamp",
        "deleted"
    ]
}